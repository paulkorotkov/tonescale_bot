document.addEventListener('DOMContentLoaded', () => {
    // URL –≤–∞—à–µ–≥–æ –±—ç–∫–µ–Ω–¥–∞ –Ω–∞ Google Apps Script (–≤—Å—Ç–∞–≤–∏—Ç–µ –µ–≥–æ –ø–æ–∑–∂–µ)
    const BACKEND_URL = '–í–ê–®_URL_–ë–≠–ö–ï–ù–î–ê_–ë–£–î–ï–¢_–ó–î–ï–°–¨'; 

    const tg = window.Telegram.WebApp;
    tg.expand(); // –†–∞—Å—à–∏—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ü–≤–µ—Ç–∞ –ø–æ–¥ —Ç–µ–º—É Telegram
    document.body.style.backgroundColor = tg.themeParams.bg_color || '#ffffff';
    document.body.style.color = tg.themeParams.text_color || '#000000';
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
    const startScreen = document.getElementById('start-screen');
    const quizScreen = document.getElementById('quiz-screen');
    const resultScreen = document.getElementById('result-screen');

    const startBtn = document.getElementById('start-btn');
    const restartBtn = document.getElementById('restart-btn');

    const progressBar = document.getElementById('progress-bar');
    const questionTitle = document.getElementById('question-title');
    const questionText = document.getElementById('question-text');
    const answersContainer = document.getElementById('answers-container');

    const resultToneEl = document.getElementById('result-tone');
    const resultDescriptionEl = document.getElementById('result-description');

    let currentQuestionIndex = 0;
    let scores = {};

    // --- –î–ê–ù–ù–´–ï –ö–í–ò–ó–ê ---
    const quizData = [
        { text: "<b>1/22: –≠–º–æ—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –í—ã —á–∞—â–µ –≤—Å–µ–≥–æ –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ:</b>", answers: [ { text: "üöÄ –†–≤–µ–Ω–∏–µ, —ç–Ω—Ç—É–∑–∏–∞–∑–º", level: "4.0" }, { text: "üòÑ –í–µ—Å–µ–ª—å–µ, —Å–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å", level: "3.5" }, { text: "üôÇ –£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å", level: "3.0" }, { text: "üòê –ë–µ–∑—Ä–∞–∑–ª–∏—á–∏–µ, —Å–∫—É–∫–∞", level: "2.5" }, { text: "üò† –í—ã—Ä–∞–∂–µ–Ω–Ω–æ–µ –≤–æ–∑–º—É—â–µ–Ω–∏–µ, –∞–Ω—Ç–∞–≥–æ–Ω–∏–∑–º", level: "2.0" }, { text: "üò° –ì–Ω–µ–≤, –æ–∑–ª–æ–±–ª–µ–Ω–Ω–æ—Å—Ç—å", level: "1.5" }, { text: "üò® –°–∫—Ä—ã—Ç—ã–π —Å—Ç—Ä–∞—Ö, –Ω–µ–ø—Ä–∏—è–∑–Ω—å", level: "1.0" }, { text: "üò≠ –ì–æ—Ä–µ, –ø–µ—á–∞–ª—å, –∞–ø–∞—Ç–∏—è", level: "0.5" }, { text: "üòî –ì–ª—É–±–æ–∫–∞—è –∞–ø–∞—Ç–∏—è", level: "0.0" } ] },
        // ... (—Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—é–¥–∞ –≤—Å–µ 22 –≤–æ–ø—Ä–æ—Å–∞ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞) ...
        { text: "<b>22/22: –ö–∞–∫ –í–∞—Å –ø–æ–Ω–∏–º–∞—é—Ç –ª—é–¥–∏:</b>", answers: [ { text: "üíØ –û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ", level: "4.0" }, { text: "üòä –•–æ—Ä–æ—à–æ", level: "3.5" }, { text: "üôÇ –û–±—ã—á–Ω–æ –ø–æ–Ω–∏–º–∞—é—Ç", level: "3.0" }, { text: "ü§î –ò–Ω–æ–≥–¥–∞ –Ω–µ–≤–µ—Ä–Ω–æ –ø–æ–Ω–∏–º–∞—é—Ç", level: "2.5" }, { text: "ü§∑‚Äç‚ôÇÔ∏è –ß–∞—Å—Ç–æ –Ω–µ–≤–µ—Ä–Ω–æ –ø–æ–Ω–∏–º–∞—é—Ç", level: "2.0" }, { text: "ü§Ø –ü–æ—Å—Ç–æ—è–Ω–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ –ø–æ–Ω–∏–º–∞—é—Ç", level: "1.5" }, { text: "üö´ –ù–µ—Ç –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è", level: "1.0" }, { text: "‚ùì –í–æ–æ–±—â–µ –Ω–µ –ø–æ–Ω–∏–º–∞—é—Ç", level: "0.5" }, { text: "... –ò–≥–Ω–æ—Ä–∏—Ä—É—é—Ç", level: "0.0" } ] },
    ];
    const resultsData = {
        '4.0': `<b>–í–∞—à–∏ —à–∞–Ω—Å—ã –Ω–∞ —É—Å–ø–µ—Ö –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –≤—ã–∂–∏–≤–∞–Ω–∏—è –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –≤—ã—Å–æ–∫–∏. –¢–æ–Ω 4.0</b>\n\n–í–∞—à–∞ —ç–Ω–µ—Ä–≥–∏—è –∏ –í–∞—à–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ –í–∞—Å...`,
        // ... (—Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—é–¥–∞ –≤—Å–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤) ...
        '0.0': `<b>–í–∞—à–∏ —à–∞–Ω—Å—ã –Ω–∞ —É—Å–ø–µ—Ö –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –≤—ã–∂–∏–≤–∞–Ω–∏—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–≤–Ω—ã –Ω—É–ª—é. –¢–æ–Ω 0.0</b>\n\n–í–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–∫–æ–µ, —á—Ç–æ —à–∞–Ω—Å—ã –Ω–∞ —É—Å–ø–µ—Ö –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–≤–Ω—ã –Ω—É–ª—é...`,
    };
    // -------------------

    startBtn.addEventListener('click', startQuiz);
    restartBtn.addEventListener('click', startQuiz);

    function startQuiz() {
        currentQuestionIndex = 0;
        scores = { '4.0': 0, '3.5': 0, '3.0': 0, '2.5': 0, '2.0': 0, '1.5': 0, '1.0': 0, '0.5': 0, '0.0': 0 };
        
        startScreen.style.display = 'none';
        resultScreen.style.display = 'none';
        quizScreen.style.display = 'flex';

        showQuestion(currentQuestionIndex);
    }

    function showQuestion(index) {
        const question = quizData[index];
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        const progress = ((index + 1) / quizData.length) * 100;
        progressBar.style.width = `${progress}%`;

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
        questionTitle.textContent = `${index + 1}/${quizData.length}`;
        questionText.innerHTML = question.text.replace(/<b>|<\/b>/g, ''); // –£–±–∏—Ä–∞–µ–º —Ç–µ–≥–∏ –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞

        // –û—á–∏—â–∞–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –æ—Ç–≤–µ—Ç—ã
        answersContainer.innerHTML = '';
        question.answers.forEach(answer => {
            const answerEl = document.createElement('div');
            answerEl.classList.add('answer-option');
            answerEl.textContent = answer.text;
            answerEl.addEventListener('click', () => selectAnswer(answer.level));
            answersContainer.appendChild(answerEl);
        });
    }

    function selectAnswer(level) {
        scores[level]++;
        currentQuestionIndex++;

        if (currentQuestionIndex < quizData.length) {
            showQuestion(currentQuestionIndex);
        } else {
            showResult();
        }
    }

    function showResult() {
        let dominantLevel = '0.0';
        let maxScore = 0;
        for (const level in scores) {
            if (scores[level] > maxScore) {
                maxScore = scores[level];
                dominantLevel = level;
            }
        }

        resultToneEl.textContent = `–¢–æ–Ω ${dominantLevel}`;
        resultDescriptionEl.innerHTML = resultsData[dominantLevel];

        quizScreen.style.display = 'none';
        resultScreen.style.display = 'flex';
        
        sendDataToBackend(dominantLevel);
    }
    
    function sendDataToBackend(result) {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç Telegram
        const user = tg.initDataUnsafe?.user;
        if (!user) {
            console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
            return;
        }

        const dataToSend = {
            user: {
                id: user.id,
                firstName: user.first_name,
                lastName: user.last_name,
                username: user.username,
            },
            result: result
        };

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –±—ç–∫–µ–Ω–¥
        fetch(BACKEND_URL, {
            method: 'POST',
            headers: { 'Content-Type': 'text/plain' }, // GAS –ª—É—á—à–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å text/plain
            body: JSON.stringify(dataToSend),
        })
        .then(response => response.json())
        .then(data => console.log('–ë—ç–∫–µ–Ω–¥ –æ—Ç–≤–µ—Ç–∏–ª:', data))
        .catch(error => console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ –±—ç–∫–µ–Ω–¥:', error));
    }
});
